// Generated by Haxe 4.3.7
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var GTweenerDemo = function() {
	var _gthis = this;
	var document = window.document;
	this.ball = document.createElement("div");
	this.ball.style.position = "absolute";
	this.ball.style.background = "#000";
	this.ball.style.borderRadius = "50%";
	var radius = 40;
	this.ball.style.width = "" + 2 * radius + "px";
	this.ball.style.height = "" + 2 * radius + "px";
	var left = 130;
	var top = 80;
	this.ball.style.left = "" + left + "px";
	this.ball.style.top = "" + top + "px";
	document.body.appendChild(this.ball);
	this.delegate = { left : left, top : top};
	var onChange = function(tween) {
		_gthis.ball.style.left = Std.string(_gthis.delegate.left) + "px";
		_gthis.ball.style.top = Std.string(_gthis.delegate.top) + "px";
	};
	com_gskinner_motion_GTweener.to(this.delegate,2,{ left : 200, top : 350},{ repeatCount : 0, reflect : true, onChange : onChange});
	window.addEventListener("click",$bind(this,this.handleClick));
};
GTweenerDemo.__name__ = true;
GTweenerDemo.main = function() {
	new GTweenerDemo();
};
GTweenerDemo.prototype = {
	handleClick: function(evt) {
		com_gskinner_motion_GTweener.to(this.delegate,0.4,{ left : evt.clientX});
	}
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var com_gskinner_motion_GTween = function(target,duration,values,props,pluginData) {
	if(duration == null) {
		duration = 1;
	}
	this.suppressEvents = false;
	this.calculatedPositionOld = NaN;
	this.calculatedPosition = NaN;
	this.ratioOld = NaN;
	this.ratio = NaN;
	this.positionOld = NaN;
	this.timeScale = 1;
	this.useFrames = false;
	this.repeatCount = 1;
	this.reflect = false;
	this.autoPlay = true;
	this._position = NaN;
	this._paused = true;
	this._delay = 0;
	if(!com_gskinner_motion_GTween.addedTimerEvent) {
		com_gskinner_motion_GTween.addedTimerEvent = true;
		if(typeof(window) == "undefined") {
			$global.setImmediate(com_gskinner_motion_GTween.staticTick);
		} else {
			window.requestAnimationFrame(com_gskinner_motion_GTween.staticTick);
		}
		com_gskinner_motion_GTween.time = $global.performance.now() / 1000;
	}
	this.ease = com_gskinner_motion_GTween.defaultEase;
	this.target = target;
	this.duration = duration;
	this.pluginData = this.copy(pluginData,{ });
	var swap = false;
	if(props != null) {
		swap = Reflect.field(props,"swapValues");
		Reflect.deleteField(props,"swapValues");
	}
	this.copy(props,this);
	this.resetValues(values);
	if(swap) {
		this.swapValues();
	}
	if(this.duration == 0 && this.get_delay() == 0 && this.autoPlay) {
		this.set_position(0);
	}
};
com_gskinner_motion_GTween.__name__ = true;
com_gskinner_motion_GTween.installPlugin = function(plugin,propertyNames,highPriority) {
	if(highPriority == null) {
		highPriority = false;
	}
	var _g = 0;
	var _g1 = propertyNames.length;
	while(_g < _g1) {
		var i = _g++;
		var propertyName = propertyNames[i];
		if(propertyName == "*") {
			com_gskinner_motion_GTween.hasStarPlugins = true;
		}
		if(Reflect.field(com_gskinner_motion_GTween.plugins,propertyName) == null) {
			com_gskinner_motion_GTween.plugins[propertyName] = [plugin];
			continue;
		}
		if(highPriority) {
			var pluginArr = Reflect.field(com_gskinner_motion_GTween.plugins,propertyName);
			pluginArr.unshift(plugin);
		} else {
			var pluginArr1 = Reflect.field(com_gskinner_motion_GTween.plugins,propertyName);
			pluginArr1.push(plugin);
		}
	}
};
com_gskinner_motion_GTween.linearEase = function(a,b,c,d) {
	return a;
};
com_gskinner_motion_GTween.getTimer = function() {
	return $global.performance.now();
};
com_gskinner_motion_GTween.staticTick = function(deltaTime) {
	var t = com_gskinner_motion_GTween.time;
	com_gskinner_motion_GTween.time = $global.performance.now() / 1000;
	if(com_gskinner_motion_GTween.pauseAll) {
		return;
	}
	var dt = (com_gskinner_motion_GTween.time - t) * com_gskinner_motion_GTween.timeScaleAll;
	var tween = com_gskinner_motion_GTween.tickList.keys();
	while(tween.hasNext()) {
		var tween1 = tween.next();
		tween1.set_position(tween1._position + (tween1.useFrames ? com_gskinner_motion_GTween.timeScaleAll : dt) * tween1.timeScale);
	}
	if(typeof(window) == "undefined") {
		$global.setImmediate(com_gskinner_motion_GTween.staticTick);
	} else {
		window.requestAnimationFrame(com_gskinner_motion_GTween.staticTick);
	}
};
com_gskinner_motion_GTween.prototype = {
	get_paused: function() {
		return this._paused;
	}
	,set_paused: function(value) {
		if(value == this._paused) {
			return this._paused;
		}
		this._paused = value;
		var f = this._position;
		if(isNaN(f) || this.repeatCount != 0 && this._position >= this.repeatCount * this.duration) {
			this._inited = false;
			this.calculatedPosition = this.calculatedPositionOld = this.ratio = this.ratioOld = this.positionOld = 0;
			this._position = -this.get_delay();
		}
		if(this._paused) {
			com_gskinner_motion_GTween.tickList.remove(this);
			com_gskinner_motion_GTween.gcLockList.remove(this);
		} else {
			com_gskinner_motion_GTween.tickList.set(this,true);
			com_gskinner_motion_GTween.gcLockList.set(this,true);
		}
		return this._paused;
	}
	,get_position: function() {
		return this._position;
	}
	,set_position: function(value) {
		this.positionOld = this._position;
		this.ratioOld = this.ratio;
		this.calculatedPositionOld = this.calculatedPosition;
		var maxPosition = this.repeatCount * this.duration;
		var end = value >= maxPosition && this.repeatCount > 0;
		if(end) {
			if(this.calculatedPositionOld == maxPosition) {
				return this._position;
			}
			this._position = maxPosition;
			this.calculatedPosition = this.reflect && (this.repeatCount & 1) == 0 ? 0 : this.duration;
		} else {
			this._position = value;
			this.calculatedPosition = this._position < 0 ? 0 : this.duration == 0 ? NaN : this._position % this.duration;
			if(this.reflect && ((this._position / this.duration | 0) & 1) != 0) {
				this.calculatedPosition = this.duration - this.calculatedPosition;
			}
		}
		this.ratio = this.duration == 0 && this._position >= 0 ? 1 : this.ease(this.calculatedPosition / this.duration,0,1,1);
		if(this.target != null && (this._position >= 0 || this.positionOld >= 0) && this.calculatedPosition != this.calculatedPositionOld) {
			if(!this._inited) {
				this.init();
			}
			var _g = 0;
			var _g1 = Reflect.fields(this._values);
			while(_g < _g1.length) {
				var n = _g1[_g];
				++_g;
				var initVal = Reflect.field(this._initValues,n);
				var rangeVal = Reflect.field(this._rangeValues,n);
				var val = initVal + rangeVal * this.ratio;
				var pluginArr = Reflect.field(com_gskinner_motion_GTween.plugins,n);
				if(pluginArr != null) {
					var l = pluginArr.length;
					var _g2 = 0;
					var _g3 = l;
					while(_g2 < _g3) {
						var i = _g2++;
						val = pluginArr[i].tween(this,n,val,initVal,rangeVal,this.ratio,end);
					}
					if(!isNaN(val)) {
						Reflect.setProperty(this.target,n,val);
					}
				} else {
					Reflect.setProperty(this.target,n,val);
				}
			}
		}
		if(com_gskinner_motion_GTween.hasStarPlugins) {
			var pluginArr = Reflect.field(com_gskinner_motion_GTween.plugins,"*");
			var l = pluginArr.length;
			var _g = 0;
			var _g1 = l;
			while(_g < _g1) {
				var i = _g++;
				var tmp = NaN;
				var tmp1 = NaN;
				pluginArr[i].tween(this,"*",tmp,tmp1,NaN,this.ratio,end);
			}
		}
		if(!this.suppressEvents) {
			if(this.onChange != null) {
				this.onChange(this);
			}
		}
		if(end) {
			this.set_paused(true);
			if(this.nextTween != null) {
				this.nextTween.set_paused(false);
			}
			if(!this.suppressEvents) {
				if(this.onComplete != null) {
					this.onComplete(this);
				}
			}
		}
		return this._position;
	}
	,get_delay: function() {
		return this._delay;
	}
	,set_delay: function(value) {
		if(this._position <= 0) {
			this._position = -value;
		}
		this._delay = value;
		return this._delay;
	}
	,get_proxy: function() {
		if(this._proxy == null) {
			this._proxy = com_gskinner_motion__$GTween_TargetProxy._new(this);
		}
		return this._proxy;
	}
	,setValue: function(name,value) {
		this._values[name] = value;
		this.invalidate();
	}
	,getValue: function(name) {
		if(this._values == null) {
			return NaN;
		}
		var value = Reflect.field(this._values,name);
		if(typeof(value) != "number") {
			return NaN;
		}
		return value;
	}
	,deleteValue: function(name) {
		Reflect.deleteField(this._rangeValues,name);
		Reflect.deleteField(this._initValues,name);
		return Reflect.deleteField(this._values,name);
	}
	,setValues: function(values) {
		this.copy(values,this._values,true);
		this.invalidate();
	}
	,resetValues: function(values) {
		this._values = { };
		this.setValues(values);
	}
	,getValues: function() {
		return this.copy(this._values,{ });
	}
	,getInitValue: function(name) {
		if(this._initValues == null) {
			throw haxe_Exception.thrown("Not initialized");
		}
		var value = Reflect.field(this._initValues,name);
		if(typeof(value) != "number") {
			return NaN;
		}
		return value;
	}
	,swapValues: function() {
		if(!this._inited) {
			this.init();
		}
		var o = this._values;
		this._values = this._initValues;
		this._initValues = o;
		var _g = 0;
		var _g1 = Reflect.fields(this._rangeValues);
		while(_g < _g1.length) {
			var n = _g1[_g];
			++_g;
			this._rangeValues[n] = Reflect.field(this._rangeValues,n) * -1;
		}
		if(this._position < 0) {
			var pos = this.positionOld;
			this.set_position(0);
			this._position = this.positionOld;
			this.positionOld = pos;
		} else {
			this.set_position(this._position);
		}
	}
	,init: function() {
		this._inited = true;
		this._initValues = { };
		this._rangeValues = { };
		var _g = 0;
		var _g1 = Reflect.fields(this._values);
		while(_g < _g1.length) {
			var n = _g1[_g];
			++_g;
			if(Reflect.field(com_gskinner_motion_GTween.plugins,n) != null) {
				var pluginArr = Reflect.field(com_gskinner_motion_GTween.plugins,n);
				var l = pluginArr.length;
				var value = NaN;
				if(Object.prototype.hasOwnProperty.call(this.target,n)) {
					value = Reflect.field(this.target,n);
				} else {
					var getter = Reflect.field(this.target,"get_" + n);
					if(getter != null && Reflect.isFunction(getter)) {
						value = Reflect.getProperty(this.target,n);
					}
				}
				var _g2 = 0;
				var _g3 = l;
				while(_g2 < _g3) {
					var i = _g2++;
					value = pluginArr[i].init(this,n,value);
				}
				if(!isNaN(value)) {
					this._initValues[n] = value;
					this._rangeValues[n] = Reflect.field(this._values,n) - value;
				}
			} else {
				var initValue = Reflect.getProperty(this.target,n);
				this._initValues[n] = initValue;
				this._rangeValues[n] = Reflect.field(this._values,n) - initValue;
			}
		}
		if(com_gskinner_motion_GTween.hasStarPlugins) {
			var pluginArr = Reflect.field(com_gskinner_motion_GTween.plugins,"*");
			var l = pluginArr.length;
			var _g = 0;
			var _g1 = l;
			while(_g < _g1) {
				var i = _g++;
				pluginArr[i].init(this,"*",NaN);
			}
		}
		if(!this.suppressEvents) {
			if(this.onInit != null) {
				this.onInit(this);
			}
		}
	}
	,beginning: function() {
		this.set_position(0);
		this.set_paused(true);
	}
	,end: function() {
		this.set_position(this.repeatCount > 0 ? this.repeatCount * this.duration : this.duration);
	}
	,invalidate: function() {
		this._inited = false;
		if(this._position > 0) {
			this._position = 0;
		}
		if(this.autoPlay) {
			this.set_paused(false);
		}
	}
	,copy: function(o1,o2,smart) {
		if(smart == null) {
			smart = false;
		}
		var _g = 0;
		var _g1 = Reflect.fields(o1);
		while(_g < _g1.length) {
			var n = _g1[_g];
			++_g;
			if(smart && Reflect.field(o1,n) == null) {
				Reflect.deleteField(o2,n);
			} else {
				Reflect.setProperty(o2,n,Reflect.field(o1,n));
			}
		}
		return o2;
	}
	,__properties__: {get_proxy:"get_proxy",set_delay:"set_delay",get_delay:"get_delay",set_position:"set_position",get_position:"get_position",set_paused:"set_paused",get_paused:"get_paused"}
};
var com_gskinner_motion__$GTween_TargetProxy = {};
com_gskinner_motion__$GTween_TargetProxy._new = function(tween) {
	return tween;
};
com_gskinner_motion__$GTween_TargetProxy.fieldRead = function(this1,name) {
	var value = this1.getValue(name);
	if(isNaN(value)) {
		return Reflect.getProperty(this1.target,name);
	} else {
		return value;
	}
};
com_gskinner_motion__$GTween_TargetProxy.fieldWrite = function(this1,name,value) {
	if(value == true || value == false || typeof(value) == "string" || isNaN(value)) {
		Reflect.setProperty(this1.target,name,value);
	} else {
		this1.setValue(name,parseFloat(Std.string(value)));
	}
};
com_gskinner_motion__$GTween_TargetProxy.arrayRead = function(this1,name) {
	var value = this1.getValue(name);
	if(isNaN(value)) {
		return Reflect.getProperty(this1.target,name);
	} else {
		return value;
	}
};
com_gskinner_motion__$GTween_TargetProxy.arrayWrite = function(this1,name,value) {
	if(typeof(value) == "boolean" || typeof(value) == "string" || isNaN(value)) {
		Reflect.setProperty(this1.target,name,value);
	} else {
		this1.setValue(name,parseFloat(Std.string(value)));
	}
};
var com_gskinner_motion_GTweener = function() {
};
com_gskinner_motion_GTweener.__name__ = true;
com_gskinner_motion_GTweener.to = function(target,duration,values,props,pluginData) {
	if(duration == null) {
		duration = 1;
	}
	var tween = new com_gskinner_motion_GTween(target,duration,values,props,pluginData);
	com_gskinner_motion_GTweener.add(tween);
	return tween;
};
com_gskinner_motion_GTweener.from = function(target,duration,values,props,pluginData) {
	if(duration == null) {
		duration = 1;
	}
	var tween = com_gskinner_motion_GTweener.to(target,duration,values,props,pluginData);
	tween.swapValues();
	return tween;
};
com_gskinner_motion_GTweener.add = function(tween) {
	var target = tween.target;
	var list = com_gskinner_motion_GTweener.tweens.h[target.__id__];
	if(list != null) {
		com_gskinner_motion_GTweener.clearValues(target,tween.getValues());
	} else {
		list = [];
		com_gskinner_motion_GTweener.tweens.set(target,list);
	}
	list.push(tween);
	tween.pluginData.GTweener = true;
};
com_gskinner_motion_GTweener.getTween = function(target,name) {
	var list = com_gskinner_motion_GTweener.tweens.h[target.__id__];
	if(list == null) {
		return null;
	}
	var l = list.length;
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var tween = list[i];
		var f = tween.getValue(name);
		if(!isNaN(f)) {
			return tween;
		}
	}
	return null;
};
com_gskinner_motion_GTweener.getTweens = function(target) {
	var tweens = com_gskinner_motion_GTweener.tweens.h[target.__id__];
	if(tweens != null) {
		return tweens;
	}
	return [];
};
com_gskinner_motion_GTweener.pauseTweens = function(target,paused) {
	if(paused == null) {
		paused = true;
	}
	var list = com_gskinner_motion_GTweener.tweens.h[target.__id__];
	if(list == null) {
		return;
	}
	var l = list.length;
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		list[i].set_paused(paused);
	}
};
com_gskinner_motion_GTweener.resumeTweens = function(target) {
	com_gskinner_motion_GTweener.pauseTweens(target,false);
};
com_gskinner_motion_GTweener.remove = function(tween) {
	Reflect.deleteField(tween.pluginData,"GTweener");
	var list = com_gskinner_motion_GTweener.tweens.h[tween.target.__id__];
	if(list == null) {
		return;
	}
	var l = list.length;
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		if(list[i] == tween) {
			list.splice(i,1);
			return;
		}
	}
};
com_gskinner_motion_GTweener.removeTweens = function(target) {
	com_gskinner_motion_GTweener.pauseTweens(target);
	var list = com_gskinner_motion_GTweener.tweens.h[target.__id__];
	if(list == null) {
		return;
	}
	var l = list.length;
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		Reflect.deleteField(list[i].pluginData,"GTweener");
	}
	com_gskinner_motion_GTweener.tweens.remove(target);
};
com_gskinner_motion_GTweener.clearValues = function(target,values) {
	var _g = 0;
	var _g1 = Reflect.fields(values);
	while(_g < _g1.length) {
		var n = _g1[_g];
		++_g;
		var tween = com_gskinner_motion_GTweener.getTween(target,n);
		if(tween != null) {
			tween.deleteValue(n);
		}
	}
};
com_gskinner_motion_GTweener.prototype = {
	init: function(tween,name,value) {
		return value;
	}
	,tween: function(tween,name,value,initValue,rangeValue,ratio,end) {
		if(end && tween.pluginData.GTweener) {
			com_gskinner_motion_GTweener.remove(tween);
		}
		return value;
	}
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = true;
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	get_native: function() {
		return this.__nativeException;
	}
	,__properties__: {get_native:"get_native"}
});
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
});
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
String.__name__ = true;
Array.__name__ = true;
com_gskinner_motion_GTween.plugins = { };
com_gskinner_motion_GTween.tickList = new haxe_ds_ObjectMap();
com_gskinner_motion_GTween.gcLockList = new haxe_ds_ObjectMap();
com_gskinner_motion_GTweener.instance = new com_gskinner_motion_GTweener();
com_gskinner_motion_GTween.installPlugin(com_gskinner_motion_GTweener.instance,["*"]);
js_Boot.__toStr = ({ }).toString;
com_gskinner_motion_GTween.version = 2.01;
com_gskinner_motion_GTween.defaultEase = com_gskinner_motion_GTween.linearEase;
com_gskinner_motion_GTween.pauseAll = false;
com_gskinner_motion_GTween.timeScaleAll = 1;
com_gskinner_motion_GTween.hasStarPlugins = false;
com_gskinner_motion_GTween.addedTimerEvent = false;
com_gskinner_motion_GTweener.tweens = new haxe_ds_ObjectMap();
GTweenerDemo.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
